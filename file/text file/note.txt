needed to add
employment page - the delete button for the posted open jobs, so that when the posted job open at the application when already fulll or done for hiring the employer can delete the posted open job


for real app development
1. // Simulate upload process
            setTimeout(() => {
                // In a real app, you would process the Excel/CSV file here
                // For demo, we'll add some sample jobs
                const sampleBulkJobs = [

2. // Simulate upload process
                setTimeout(() => {
                    // In a real app, you would process the file here
                    // For demo, we'll just show a success message
                    uploadStatus.textContent = 'File uploaded successfully!';
                    uploadStatus.className = 'upload-status upload-success';

3. // Update admin statistics
        function updateAdminStats() {
            // In a real app, this would fetch data from a server
            // For demo purposes, we'll use sample data
            const total = 3;
            const pending = 1;
            const approved = 1;
            const rejected = 1;

4. // Render admin applications
        function renderAdminApplications() {
            const searchTerm = adminSearchInput.value.toLowerCase();
            const statusFilterValue = statusFilter.value;
            const jobFilterValue = jobFilter.value;
            
            // In a real app, this would fetch filtered data from a server
            // For demo, we'll use sample data
            const sampleApplications = [

5. // Export to Excel function
        function exportToExcel() {
            // Sample data for export
            const worksheetData = [
                ['Name', 'Email', 'Phone', 'Job Applied', 'Company', 'Status', 'Application Date']
            ];
            
            // In a real app, this would use actual application data
            const sampleData = [
                ['Juan Dela Cruz', 'juan.delacruz@example.com', '09123456789', 'Customer Service Representative', 'ALORICA', 'Pending', '2023-05-15'],
                ['Maria Santos', 'maria.santos@example.com', '09198765432', 'Marketing Specialist', 'FAVERTON GROUP INC.', 'Approved', '2023-05-10'],
                ['Pedro Reyes', 'pedro.reyes@example.com', '09187654321', 'Sales Associate', 'RC COLA', 'Rejected', '2023-05-05']
            ];

6. function loadChatMessages() {
            chatMessagesEl.innerHTML = '';
            
            // In a real app, you would load messages for the current conversation
            // For demo, we'll show some sample messages
            const sampleMessages = [
                { sender: 'employer', text: 'Hello, I saw your application and would like to schedule an interview.', time: '10:30 AM' },
                { sender: 'applicant', text: 'Thank you for considering my application! When would be a good time?', time: '10:32 AM' },
                { sender: 'employer', text: 'How about tomorrow at 2 PM?', time: '10:33 AM' }
            ];

7. // In a real app, you would send the message to the server
                // and the other user would receive it in real-time

8. // Update education (in a real app, this would come from the applicant's profile)
                const educationContainer = document.getElementById('applicant-detail-education');
                educationContainer.innerHTML = `
                    <div class="education-item">
                        <div class="applicant-detail-label">Bachelor of Science in Business Administration</div>
                        <div class="applicant-detail-value">University of the Philippines, 2015-2019</div>
                    </div>
                `;

9. // Update experience (in a real app, this would come from the applicant's profile)
                const experienceContainer = document.getElementById('applicant-detail-experience');
                experienceContainer.innerHTML = `

10. function viewResumePreview() {
            if (currentResumeFile) {
                // In a real application, this would open the resume file
                // For this demo, we'll show an alert
                alert(`Opening resume: ${currentResumeFile.name}`);
                
                // In a real app, you might use:
                // const fileURL = URL.createObjectURL(currentResumeFile);
                // window.open(fileURL, '_blank');
            }

11. function viewApplicationResumePreview() {
            if (currentApplicationResumeFile) {
                // In a real application, this would open the resume file
                // For this demo, we'll show an alert
                alert(`Opening resume: ${currentApplicationResumeFile.name}`);
            }
        }

12.             // In a real app, you would use WebSockets or similar technology
            // to push notifications to the user in real-time

13. // NEW FUNCTION: View resume
        function viewResume() {
            // In a real app, this would open the actual resume file
            // For demo, we'll just show an alert
            alert('Opening resume...\n\nIn a real application, this would display the resume file.');
            
            // Simulate opening the resume in a new tab
            // window.open(URL.createObjectURL(resumeFile), '_blank');
        }

14. // Google login/signup (simulated)
        function loginWithGoogle() {
            // In a real application, this would integrate with Google OAuth
            currentUser = {

15.  function signupWithGoogle() {
            // In a real application, this would integrate with Google OAuth
            showSection('user-type-section');
        }


additionals 
     at the edit profile page add the certifications and the licences
     also at the edit profile page when I add education and experioence when I input in those forms it will display as [Object] 

the admin page
     at the admin page remove the nav buttons at the bottoms just the admin page needed.
     it will only has the search and the notifs for when a new applicant register to the profile page so that the admin also has an ipdate on what is happening at the registaered applicants and even the employers. and it can also possible the admin can only see on how many onlie at the admin page or how many people are using the admin page at the same time.

at the applicant page 
    add a button where in the applicant can notify the employee that he/she already applied/hired at the other company that is not posted at the application, so that the employee will know that the applicant has already have a job.

view resume
    when clicking the view resume, the file wont open it will just alert like this alert(`Opening resume: ${currentResumeFile.name}`);, it should open the resume or the file itself

edit profile page
    when the user change the picture it will show an error
    Uncaught Error 
    at <anonymous> (c:\Users\CPESO\Documents\GitHub\PESO-Employment-App\scripts\script.js:2065:45)
    at saveProfile (c:\Users\CPESO\Documents\GitHub\PESO-Employment-App\scripts\script.js:2058:33)
    at onclick (c:\Users\CPESO\Documents\GitHub\PESO-Employment-App\index.html:727:73)

1. Fix Profile Picture Error
The error occurs because updateProfilePicture() is trying to access elements that might not exist. Here's the fix:

Replace the updateProfilePicture() function in script.js:
function updateProfilePicture() {
    const profileAvatar = document.getElementById('profile-avatar');
    const editProfileAvatar = document.getElementById('edit-profile-avatar');
    
    if (currentUser && currentUser.profilePicture) {
        if (profileAvatar) {
            profileAvatar.innerHTML = `<img src="${currentUser.profilePicture}" class="profile-picture">`;
        }
        if (editProfileAvatar) {
            editProfileAvatar.innerHTML = `<img src="${currentUser.profilePicture}" class="profile-picture">`;
        }
    } else {
        if (profileAvatar) {
            profileAvatar.innerHTML = `<i class="fas fa-user"></i>`;
        }
        if (editProfileAvatar) {
            editProfileAvatar.innerHTML = `<i class="fas fa-user"></i>`;
        }
    }
}

2. Fix "I Got Hired" Button Error
Replace the function name in the HTML and JavaScript:

In your HTML file, change:
<div class="nav-item" onclick="showHireNotification()">I Got hired!</div>
To:
<div class="nav-item" onclick="showHiredNotification()">I Got hired!</div>

3. Add Remove Job Functionality
Add this function to your script.js:
function removeJob(jobId, button) {
    if (confirm('Are you sure you want to remove this job posting? This action cannot be undone.')) {
        // Remove from uploadedJobs
        uploadedJobs = uploadedJobs.filter(job => job.id !== jobId);
        localStorage.setItem('uploadedJobs', JSON.stringify(uploadedJobs));
        
        // Remove from jobData
        Object.keys(jobData).forEach(category => {
            if (jobData[category]) {
                jobData[category] = jobData[category].filter(job => job.id !== jobId);
            }
        });
        
        // Remove the job card from UI
        if (button) {
            button.closest('.job-card').remove();
        }
        
        alert('Job posting removed successfully!');
        
        // Refresh the view
        if (currentUserType === 'applicant') {
            populateJobCards(currentCategory);
        }
    }
}
Update the job card generation in populateJobCards() function:

Find this part in populateJobCards():
jobCard.innerHTML = `  
    <div class="job-image" style="background-image: url('${job.image}');">
        <div class="job-type">${job.type}</div>
    </div>
    <div class="job-content">
        <div class="job-title">${job.title}</div>
        <div class="company">${job.company}</div>
        ${applicationStatus}
        <div class="job-details">
            <span><i class="fas fa-map-marker-alt"></i> ${job.location}</span>
            <span><i class="fas fa-money-bill-wave"></i> ${job.salary}</span>
        </div>
        <button class="view-btn" onclick="showJobDetails('${job.id}')">
            ${hasApplied ? 'Review Application' : 'View Job'}
        </button>
    </div>
`;
Replace it with:
// Check if current user is an employee and this is their uploaded job
const isOwnJob = currentUserType === 'employee' && job.uploaded;

jobCard.innerHTML = `
    <div class="job-image" style="background-image: url('${job.image}');">
        <div class="job-type">${job.type}</div>
        ${isOwnJob ? '<div class="job-uploaded-badge">Your Post</div>' : ''}
    </div>
    <div class="job-content">
        <div class="job-title">${job.title}</div>
        <div class="company">${job.company}</div>
        ${applicationStatus}
        <div class="job-details">
            <span><i class="fas fa-map-marker-alt"></i> ${job.location}</span>
            <span><i class="fas fa-money-bill-wave"></i> ${job.salary}</span>
        </div>
        <div class="action-buttons">
            <button class="view-btn" onclick="showJobDetails('${job.id}')">
                ${hasApplied ? 'Review Application' : 'View Job'}
            </button>
            ${isOwnJob ? `<button class="action-btn remove-btn" onclick="removeJob('${job.id}', this)">Remove Job</button>` : ''}
        </div>
    </div>
`;

4. Add CSS for the "Your Post" badge
Add this to your style.css:
.job-uploaded-badge {
    position: absolute;
    top: 10px;
    left: 10px;
    background: #28a745;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 10px;
    font-weight: 600;
}

.job-image {
    position: relative;
}

5. Fix the "I Got Hired" Modal Issue
Update the showHiredNotification function in script.js:
function showHiredNotification() {
    if (!currentUser) {
        alert('Please log in to use this feature');
        showSection('auth-section');
        return;
    }
    
    // Remove any existing modal first
    const existingModal = document.querySelector('.modal');
    if (existingModal) {
        existingModal.remove();
    }
    
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-title">Job Notification</div>
            <p>Let employers know you've been hired elsewhere. This will notify all employers you've applied to.</p>
            <div class="form-group">
                <label>Company Name</label>
                <input type="text" id="hired-company" placeholder="Enter company name">
            </div>
            <div class="form-group">
                <label>Position</label>
                <input type="text" id="hired-position" placeholder="Enter position">
            </div>
            <div class="form-group">
                <label>Start Date</label>
                <input type="date" id="hired-date">
            </div>
            <div class="modal-buttons">
                <button class="modal-btn cancel" onclick="this.closest('.modal').remove()">Cancel</button>
                <button class="modal-btn confirm" onclick="submitHiredNotification()">Submit</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // Set default date to today
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('hired-date').value = today;
}

These changes will: 

Fix the profile picture error by adding proper null checks
Fix the "I Got Hired" button by correcting the function name
Add remove job functionality for employees to remove their posted jobs
Add visual indicators to show which jobs were uploaded by the current employee
Fix the modal creation to prevent duplicate modals
The remove job feature will only show for jobs that the current employee uploaded, and it will completely remove the job from all views so applicants can no longer see or apply to i


as of 10/16
move the I got hired button at edit profile at the applicant page and under the submit resume and instead of I got hired, the button will be named [Report to Peso] button and when the button was click another page will show where in it will show the informof the applicant and there will be a button there [Hired] and when the applicant click that button the form will show where in the applicant will need to fill up the form title Job Notification and we would like to know about ypour status etc. ann a form to be filled up are the Company name on wehre the applicant got hited the position and the start date. and afeter the applicant filled that up the subnit butto will light up means it can be submitted and when submiutted it will now redirect to the edit prifile page again. and it will now notfiy the employers thta the applicant was already hired t the other company. and it will stats to the admin it willcount the hired applicant to the database